{
    "sourceFile": "src/components/ui/AutoComplete/AutoComplete.hooks.ts",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 18,
            "patches": [
                {
                    "date": 1715876811053,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1715876944450,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -9,9 +9,9 @@\n ) {\n   const id = useId();\n \n   return useQuery({\n-    queryKey: [\"suggestions\", id, query],\n+    queryKey: [\"autocomplete_suggestions\", id, query],\n     queryFn: () => fetchSuggestions(query),\n     enabled: query.length >= minLength,\n   });\n }\n"
                },
                {
                    "date": 1715909321916,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -3,9 +3,9 @@\n import { useQuery } from \"@tanstack/react-query\";\n \n export function useFetchSuggestions<T>(\n   query: string,\n-  fetchSuggestions: (query: string) => Promise<T>,\n+  fetchSuggestions: (query: string) => Promise<T[]>,\n   minLength = 2,\n ) {\n   const id = useId();\n \n"
                },
                {
                    "date": 1715909331453,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -8,9 +8,9 @@\n   minLength = 2,\n ) {\n   const id = useId();\n \n-  return useQuery({\n+  return useQuery<T[]>({\n     queryKey: [\"autocomplete_suggestions\", id, query],\n     queryFn: () => fetchSuggestions(query),\n     enabled: query.length >= minLength,\n   });\n"
                },
                {
                    "date": 1715950595199,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,9 +1,10 @@\n import { useId } from \"react\";\n \n+import type { Option } from \"@/components/ui/AutoComplete/AutoComplete.types\";\n import { useQuery } from \"@tanstack/react-query\";\n \n-export function useFetchSuggestions<T>(\n+export function useFetchSuggestions<T extends Option<T>>(\n   query: string,\n   fetchSuggestions: (query: string) => Promise<T[]>,\n   minLength = 2,\n ) {\n"
                },
                {
                    "date": 1715951147018,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,10 +1,9 @@\n import { useId } from \"react\";\n \n-import type { Option } from \"@/components/ui/AutoComplete/AutoComplete.types\";\n import { useQuery } from \"@tanstack/react-query\";\n \n-export function useFetchSuggestions<T extends Option<T>>(\n+export function useFetchSuggestions(\n   query: string,\n   fetchSuggestions: (query: string) => Promise<T[]>,\n   minLength = 2,\n ) {\n"
                },
                {
                    "date": 1715951166124,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -8,9 +8,9 @@\n   minLength = 2,\n ) {\n   const id = useId();\n \n-  return useQuery<T[]>({\n+  return useQuery({\n     queryKey: [\"autocomplete_suggestions\", id, query],\n     queryFn: () => fetchSuggestions(query),\n     enabled: query.length >= minLength,\n   });\n"
                },
                {
                    "date": 1715952155945,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -11,7 +11,7 @@\n \n   return useQuery({\n     queryKey: [\"autocomplete_suggestions\", id, query],\n     queryFn: () => fetchSuggestions(query),\n-    enabled: query.length >= minLength,\n+    enabled: false\n   });\n }\n"
                },
                {
                    "date": 1715956940417,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,17 +1,17 @@\n import { useId } from \"react\";\n \n import { useQuery } from \"@tanstack/react-query\";\n \n-export function useFetchSuggestions(\n+export function useFetchSuggestions<T>(\n   query: string,\n-  fetchSuggestions: (query: string) => Promise<T[]>,\n+  fetchSuggestions:T,\n   minLength = 2,\n ) {\n   const id = useId();\n \n   return useQuery({\n     queryKey: [\"autocomplete_suggestions\", id, query],\n     queryFn: () => fetchSuggestions(query),\n-    enabled: false\n+    enabled: false,\n   });\n }\n"
                },
                {
                    "date": 1715956952052,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -3,9 +3,9 @@\n import { useQuery } from \"@tanstack/react-query\";\n \n export function useFetchSuggestions<T>(\n   query: string,\n-  fetchSuggestions:T,\n+  fetchSuggestions: (query: string) => Promise<any>,\n   minLength = 2,\n ) {\n   const id = useId();\n \n"
                },
                {
                    "date": 1715958036600,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,9 +1,9 @@\n import { useId } from \"react\";\n \n import { useQuery } from \"@tanstack/react-query\";\n \n-export function useFetchSuggestions<T>(\n+export function useFetchSuggestions(\n   query: string,\n   fetchSuggestions: (query: string) => Promise<any>,\n   minLength = 2,\n ) {\n"
                },
                {
                    "date": 1715958047341,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -3,9 +3,9 @@\n import { useQuery } from \"@tanstack/react-query\";\n \n export function useFetchSuggestions(\n   query: string,\n-  fetchSuggestions: (query: string) => Promise<any>,\n+  fetchSuggestions: (query: string) => Option[],\n   minLength = 2,\n ) {\n   const id = useId();\n \n"
                },
                {
                    "date": 1715958064056,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,11 +1,11 @@\n import { useId } from \"react\";\n \n import { useQuery } from \"@tanstack/react-query\";\n \n-export function useFetchSuggestions(\n+export function useFetchSuggestions<T >(\n   query: string,\n-  fetchSuggestions: (query: string) => Option[],\n+  fetchSuggestions: (query: string) => Option<T>[],\n   minLength = 2,\n ) {\n   const id = useId();\n \n"
                },
                {
                    "date": 1715958185574,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,9 +1,9 @@\n import { useId } from \"react\";\n \n import { useQuery } from \"@tanstack/react-query\";\n \n-export function useFetchSuggestions<T >(\n+export function useFetchSuggestions<T>(\n   query: string,\n   fetchSuggestions: (query: string) => Option<T>[],\n   minLength = 2,\n ) {\n"
                },
                {
                    "date": 1715958366304,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -3,9 +3,9 @@\n import { useQuery } from \"@tanstack/react-query\";\n \n export function useFetchSuggestions<T>(\n   query: string,\n-  fetchSuggestions: (query: string) => Option<T>[],\n+  fetchSuggestions: (query: string) => any,\n   minLength = 2,\n ) {\n   const id = useId();\n \n"
                },
                {
                    "date": 1715958392909,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -3,9 +3,9 @@\n import { useQuery } from \"@tanstack/react-query\";\n \n export function useFetchSuggestions<T>(\n   query: string,\n-  fetchSuggestions: (query: string) => any,\n+  fetchSuggestions: (query: string) => Promise<any[]>,\n   minLength = 2,\n ) {\n   const id = useId();\n \n"
                },
                {
                    "date": 1715958419590,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -3,9 +3,9 @@\n import { useQuery } from \"@tanstack/react-query\";\n \n export function useFetchSuggestions<T>(\n   query: string,\n-  fetchSuggestions: (query: string) => Promise<any[]>,\n+  fetchSuggestions: (query: string) => Promise<Option<T>[]>,\n   minLength = 2,\n ) {\n   const id = useId();\n \n"
                },
                {
                    "date": 1715958426978,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,6 +1,7 @@\n import { useId } from \"react\";\n \n+import type { Option } from \"@/components/ui/AutoComplete/AutoComplete.types\";\n import { useQuery } from \"@tanstack/react-query\";\n \n export function useFetchSuggestions<T>(\n   query: string,\n"
                },
                {
                    "date": 1715964904968,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -12,7 +12,7 @@\n \n   return useQuery({\n     queryKey: [\"autocomplete_suggestions\", id, query],\n     queryFn: () => fetchSuggestions(query),\n-    enabled: false,\n+    enabled: minLength>=2\n   });\n }\n"
                }
            ],
            "date": 1715876811053,
            "name": "Commit-0",
            "content": "import { useId } from \"react\";\n\nimport { useQuery } from \"@tanstack/react-query\";\n\nexport function useFetchSuggestions<T>(\n  query: string,\n  fetchSuggestions: (query: string) => Promise<T>,\n  minLength = 2,\n) {\n  const id = useId();\n\n  return useQuery({\n    queryKey: [\"suggestions\", id, query],\n    queryFn: () => fetchSuggestions(query),\n    enabled: query.length >= minLength,\n  });\n}\n"
        }
    ]
}